    ‹program›→‹def-list›
    ‹def-list›→‹def>*|E
    ‹def›→‹var-def›|‹fun-def›
    ‹var-def›→{var} ‹var-list› {;}
    ‹var-list›→‹id-list›
    ‹id-list›→{‹id›} ‹id-list-cont›
    ‹id-list-cont›→({,} {‹id›})|E
    ‹fun-def›→{‹id›} {(} ‹param-list› {)} {{} ‹var-def-list› ‹stmt-list› {}}
    ‹param-list›→‹id-list›|E
    ‹var-def-list›→‹var-def›*|E
    ‹stmt-list›→‹stmt›*|E
    ‹stmt›→‹stmt-assign›|‹stmt-fun-call›|‹stmt-if›|‹stmt-switch›|‹stmt-while›|‹stmt-do-while›|‹stmt-for›|‹stmt-break›|‹stmt-continue›|‹stmt-return›|‹stmt-empty›
    ‹stmt-assign›→{‹id›} {=} ‹expr› {;}
    ‹stmt-fun-call›→‹fun-call› {;}
    <fun-call›→{‹id›} {(} ‹expr-list› {)}
    ‹expr-list›→(‹expr› ‹expr-list-cont›)|E
    ‹expr-list-cont›→({,} ‹expr›)*|E
    ‹stmt-if›→if {(} ‹expr› {)} {{} ‹stmt-list› {}} ‹else-if-list› ‹else›
    ‹else-if-list›→({else} {if} {(} ‹expr› {)} {{} ‹stmt-list› {}})*
    ‹else›→({else}{{} ‹stmt-list› {}})|E
    ‹stmt-switch›→{switch} {(} ‹expr› {)} {{} ‹case-list› ‹default› {}}
    ‹case-list›→(‹case›)*|E
    ‹case›→{case} ‹lit-list› {:} ‹stmt-list›
    ‹lit-list›→‹lit-simple› ‹lit-list-cont›
    ‹lit-list-cont›→({,} ‹lit-simple›+)|E
    ‹lit-simple›→{‹lit-bool›}|{‹lit-int›}|{‹lit-char›}
    ‹default›→({default} {:} ‹stmt-list›)|E
    ‹stmt-while›→{while} {(} ‹expr› {)} {{} ‹stmt-list› {}}
    ‹stmt-do-while›→{do} {{} ‹stmt-list› {}} {while} {(} ‹expr› {)} {;}
    ‹stmt-for›→{for} {(} {‹id›} {in} ‹expr› {)} {{} ‹stmt-list› {}}
    ‹stmt-break›→{break} {;}
    ‹stmt-continue›→{continue} {;}
    ‹stmt-return›{→}{return} ‹expr› {;}
    ‹stmt-empty›→{;}
    ‹expr›→‹expr-cond›
    ‹expr-cond›→‹expr-or›( {?} ‹expr› {:} ‹expr›)*
    ‹expr-or›→‹expr-and› ({||}‹expr-and›)*
    ‹expr-and›→ ‹expr-comp›({&&}+ ‹expr-comp›)*
    ‹expr-comp›→ ‹expr-rel›(‹op-comp› ‹expr-rel›)*
    ‹op-comp›→{==}|{!=}
    ‹expr-rel›→‹expr-bit-or›(‹op-rel› ‹expr-bit-or›)*
    ‹op-rel›→{<}|{<=}|{>}|{>=}
    ‹expr-bit-or›→‹expr-bit-and›(‹op-bit-or› ‹expr-bit-and›)*
    ‹op-bit-or›→{|}|^
    ‹expr-bit-and›→ ‹expr-bit-shift›({&} ‹expr-bit-shift›)*
    ‹expr-bit-shift›→‹expr-add›(‹op-bit-shift› ‹expr-add›)*
    ‹op-bit-shift›→{<<}|{>>}|{>>>}
    ‹expr-add›→‹expr-mul›(‹op-add› ‹expr-mul›)*
    ‹op-add›→{+}|{−}
    ‹expr-mul›→(‹op-mul› ‹expr-pow›)*|‹expr-pow›
    ‹op-mul›→{*}|{/}|
    ‹expr-pow›→‹expr-unary›(‹expr-unary› {**})*
    ‹expr-unary›→‹expr-primary›(‹op-unary›)*
    ‹op-unary›→{+}|{-}|{!}|{~}
    ‹expr-primary›→{‹id›}|‹fun-call›|‹lit›|{(}‹expr›{)}
‹lit›→‹lit-simple›|{‹lit-str›}|‹array-list›
    ‹array-list›→{{}‹lit-list›*{}}

